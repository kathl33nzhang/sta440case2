---
title: "Exploration of Multiple Treatments on the Metabolic Efficiency of the Mitochondria"
authors: "Dom Fenoglio, Brian Kim, Kathleen Zhang"
format: pdf
header-includes:
  - \usepackage{longtable}
  - \usepackage{pdflscape}
---

```{r,echo=FALSE,message=FALSE,include=FALSE,warning=FALSE}
library(lmerTest)
library(lme4)
library(performance)
library(lmtest)
library(nlme)
library(tidyverse)
library(readxl)
library(knitr)
library(kableExtra)
data = NULL
for (i in excel_sheets("data.xls")){
  this_df <- read_excel("data.xls",sheet = i,skip = 1) |> 
    select(-Basal) |> 
    pivot_longer(cols = -Subject, names_to = "Dose",values_to = "VO2") |> 
    mutate(Substrate = i)
  data <- rbind(data,this_df)
}
data <- data |> 
  mutate(Dose = round(as.numeric(Dose), 2),
         natural = if_else(str_detect(Subject,"NT"),"Natural","Transgenic"),
         malate = if_else(str_detect(Substrate,"M"),1,0),
         glutamate = if_else(str_detect(Substrate,"G"),1,0),
         pyruvate = if_else(str_detect(Substrate,"P"),1,0),
         palmytol = if_else(str_detect(Substrate,"Pc"),1,0),
         octanoyl = if_else(str_detect(Substrate,"Oc"),1,0),
         pair = substr(Subject,3,3))

## Should we filter out the 12.95 measure? it isn't basal but fit is much better without it
## May also need to log transform outcome variable,
data <- data |> 
  filter(Dose < -13)
lmm1 <- lmer(VO2 ~ natural * Dose * Substrate + (1 | pair), data = data)
```


## 1 Background

The mitochondria are considered the "powerhouse" of the cell, responsible for generating the cell's usable energy through oxidative phosphorylation, a process necessary for all biological processes, particularly in high-demand organs such as the heart, brain, and muscles. Their proper function is critical for overall health, as disruptions to their function are associated with various health issues, such as cancer, heart disease, and Alzheimer's.

One way to examine mitochondrial function is by using the multiplexed assay platform, a laboratory method that allows researchers to measure multiple dimensions of mitochondrial activity across different substrates and energy demand conditions. By measuring respiration rates under different combinations of substrates across different experimental settings, such as genetic background and dose, researchers hope to better understand these effects on the metabolic and functional phenotypes of mitochondria.

The main motivation for our analysis is to quantitatively test hypotheses about genetic changes on mitochondrial efficiency and energy production, and whether there is evidence that genotype effects (transgenic vs. natural mice) depend on substrate and/or dose. By building a modeling framework, we hope to determine how mitochondrial efficiency varies by substrate, genotype, and dose while capturing both fixed and random sources of variation.

## 2 Exploratory Data Analysis

We explored patterns of $VO_2$ production across genotype, substrate, and dose to assess whether systematic differences exist.

Looking at figure 1 we can see that genotype has an effect on $VO_2$ production. Across nearly all substrates we can see the transgenic mice display higher $VO_2$ production than natural mice. For substrates of $PMOc$ and $PMPc$ we can see different slopes for $VO_2$ production vs Dose and as the doses become higher, the effects of genotype becomes more significant. This suggests a need for an interaction between dose and substrate. The effect is most pronounced when the doses are higher in $PMPc$ and $PMOc$, and for $OcM$ and $PcM$ we see a clear higher $VO_2$ production for all doses. We also can see that substrates involving Octanoyl Carnitine $Oc$ and Palmitoyl-Carnitine $Pc$ has a more pronounced separation between transgenic vs natural mouse.

$OcM$ and $PcM$ show a relatively flat dose-response curves for both genotypes which suggests limited sensitivity to dose changes and $PMOc$ and $PMPc$ substrates highlight a stronger genotype effect as the transgenic mice has a more pronounced effect to dose. This points to an interaction between substrate and genotype where certain substrates amplify the genotype-specific differences in the $VO_2$ production efficiency.

#### Pair - Level Variation

The researchers' experimental design, which matched a transgenic mouse with a natural type mouse and tested each pair on a different day, could induce some added variation that dose and substrate cannot account for. This is because the experimental setup could vary slightly day-to-day, influencing the measurement of our response variable $VO_2$.

Looking at Figure 2, we can see that there does in fact seem to be systematic differences on the pair level. For example, pair 5 exhibits a much larger gap between $VO_2$ production of transgenic and natural type mice for $OcM$ and $PcM$. Across every pair, we see enough variation between the genotype-$VO_2$ relationship to warrant consideration in our final modeling decisions.

#### Conclusions

1.  Genotype appears significantly correlated with $VO_2$ production: transgenic mice had higher $VO_2$ than nautral mice across most conditions
2.  Substrate and dose seem to matter as well: We saw certain substrates had a larger effect in the $VO_2$ production as $PMOc$ and $PMPc$ tended to effect the transgenic mice more while $OcM$ and $PcM$ tended to have an equal effect on transgenic and natural mice. This relationship was highly dependent on dose.
3.  Pairs: While researchers do not need to know the specific measurement predictions for each pair, we need to account for variation on the pair level in our model.

## 3 Modeling

To account for all of the points noted above, we chose to fit a fully interactive linear model regressing genotype, dose, and substrate on $VO_2$. Furthermore, we included a random intercept for pair, allowing us to include this added variation in the model while retaining the ability to predict on an unobserved pair. 

From Table 1, we can see a log likelihood value of -2489.7 for our chosen model. Compared to a model excluding genotype, this likelihood is statistically significant as a more preferred model according to a chi-squared test. Furthermore, our models intraclass correlation (ICC), which is the ratio of pair variability to total variability. An ICC value of 0.644 is a strong piece of evidence in support of including a random intercept for pair, as it signifies that the variation across pairs is non-neglible.

Finally, we see that the conditional $R^2$ value in Table 2 represents the variance explained by our model. By allowing each pair have its own intercept we explain about 96.5% of the total variability in our data, higher than the 90% explained marginally by the fixed effects.


$$
Model\ 1:\ VO_2 = Genotype * Dose * Substrate + (1|pair) + \epsilon
$$
$$
Model\ 2:\ VO_2 = Dose * Substrate + (1|pair) + \epsilon
$$


## 4 Analysis

TODO: bonferroni correction for p-values, include/analyze graph and give interpretation examples (see presentation).

```{r,echo=FALSE,message=FALSE,warning=FALSE}
preds <- predict(lmm1, data, allow.new.levels = TRUE)
graph_data <- data |>
  mutate(predictions = preds) |>
  tidyr::pivot_longer(cols = c(predictions, VO2),
                      names_to = "measure",
                      values_to = "value") |>
  dplyr::group_by(Substrate, measure, Dose,natural) |>
  dplyr::summarize(mean_value = mean(value, na.rm = TRUE),
                   standard_error = sd(value, na.rm = TRUE),
                   .groups = "drop")
graph_data |> 
  ggplot(aes(x = Dose, y = mean_value, color = measure,shape = natural)) +
  geom_point(size = 2, alpha = 0.85) +
  geom_errorbar(data = filter(graph_data, measure == "predictions"),aes(ymin = mean_value - standard_error,
                    ymax = mean_value + standard_error),
                width = 0.025, linewidth = 0.3, alpha = 0.6) +
  facet_wrap(. ~ Substrate) +
  labs(title = "Oxygen efficiency predictions by genotype",
    x = "Dose",
    y = "VO2",
    color = "Data Type",
    shape = "Genotype"
  ) +
  scale_y_continuous(
    breaks = seq(0, 16000, 2000)  
  ) + 
  theme_bw() + 
  theme(
    legend.position = "bottom",
    strip.text = element_text(face = "bold"),
    panel.grid.major = element_line(linewidth = 0.2),
    panel.grid.minor = element_blank(),
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)
  )
```


## 5 Conclusion and Future Work

Our analysis showed strong evidence that genotype significantly influences $VO_2$ production conditional on both substrate and dose. Across nearly all experimental conditions, transgenic mice displayed a higher $VO_2$ production relative to natural mice with some substrates amplifying this effect more than others. These findings show that transgenic geotype is associated with enhanced metabolic efficiency

However, one major limitation can be seen in Figure 4, the residual plot across dosage levels. We see some evidence of a nonlinear relationship between dose and $VO_2$ production conditional on substrate and genotype, something that was not accounted for in our model. We chose to live the relationship linear because it was our understanding that the researchers' had some biological motivation behind this claim. Since our analysis shows evidence arguing against this claim, further work should include interrogating these assumptions, especially among higher dosage levels. 

In addition, Future work should focus on exploring a broader range of substrates and leveraging larger samples to better account for variability across experimental pairs. These extensions would help clarify the extent to which the observed genotype effects generalize across different biological and experimental contexts.

## 6 Appendix

### Exploratory Data Analysis

```{r, echo = FALSE, message = FALSE, warning = FALSE}
# loading in data and libraries 
library(tidyverse)
library(lmerTest)
library(lme4)
library(performance)
library(lmtest)
library(nlme)
library(tidyverse)
library(readxl)
library(knitr)
library(kableExtra)
```

```{r, echo = FALSE}
data = NULL

for (i in excel_sheets("data.xls")){
  this_df <- read_excel("data.xls",sheet = i,skip = 1) |> 
    select(-Basal) |> 
    pivot_longer(cols = -Subject, names_to = "Dose",values_to = "VO2") |> 
    mutate(Substrate = i)
  data <- rbind(data,this_df)
}
data <- data |> 
  mutate(Dose = round(as.numeric(Dose), 2),
         natural = if_else(str_detect(Subject,"NT"),"Natural","Transgenic"),
         malate = if_else(str_detect(Substrate,"M"),1,0),
         glutamate = if_else(str_detect(Substrate,"G"),1,0),
         pyruvate = if_else(str_detect(Substrate,"P"),1,0),
         palmytol = if_else(str_detect(Substrate,"Pc"),1,0),
         octanoyl = if_else(str_detect(Substrate,"Oc"),1,0),
         pair = substr(Subject,3,3))

```

```{r, echo = FALSE, message = FALSE, warning = FALSE}
## Basic graph
data |> 
  ggplot(aes(x = Dose, y = VO2, color = as.factor(natural))) +
  geom_point() +
  geom_smooth(method = "lm") + 
  facet_wrap(.~Substrate)

```

```{r, echo = FALSE, message = FALSE, warning = FALSE}
## Facet by pair
for (i in unique(data$pair)){
  p <- data |> 
    filter(pair == i) |> 
    ggplot(aes(x = Dose, y = VO2, color = as.factor(natural))) +
    geom_point() +
    geom_smooth(method = "lm") + 
    facet_wrap(.~Substrate) +
    scale_color_manual(values = c("red","blue"),labels = c("0" = "Natural","1" = "Transgenic")) +
    labs(title = paste0("VO2 vs. Dose for pair ",i),
         color = "Genotype")
  print(p)
}
```

```{r, echo = FALSE, results = "hide", message = FALSE, warning = FALSE}
## Comparing substrate indicators vs. individual effects for each
amino <- lm(VO2 ~ Dose + natural + glutamate + pyruvate + palmytol + octanoyl, data = data)
substrate <- lm(VO2 ~ natural + Dose + Substrate, data = data)

AIC(amino, substrate)
summary(amino)$adj.r.squared
summary(substrate)$adj.r.squared

model_comp <- data.frame(
  Model = c("Amino Acids", "Substrate"),
  df    = c(8, 9),
  AIC   = c(7439.921, 7386.290),
  Adjusted_R2 = c(0.721, 0.755)
)

```

```{r, echo = FALSE}
kable(
  model_comp,
  booktabs = TRUE,
  caption = "Model comparison using AIC and Adjusted R²"
) |>
  kable_styling(full_width = FALSE, position = "center")
```

### Modeling

```{r, echo = FALSE}
data = NULL
for (i in excel_sheets("data.xls")){
  this_df <- read_excel("data.xls",sheet = i,skip = 1) |> 
    select(-Basal) |> 
    pivot_longer(cols = -Subject, names_to = "Dose",values_to = "VO2") |> 
    mutate(Substrate = i)
  data <- rbind(data,this_df)
}
data <- data |> 
  mutate(Dose = round(as.numeric(Dose), 2),
         natural = if_else(str_detect(Subject,"NT"),"Natural","Transgenic"),
         malate = if_else(str_detect(Substrate,"M"),1,0),
         glutamate = if_else(str_detect(Substrate,"G"),1,0),
         pyruvate = if_else(str_detect(Substrate,"P"),1,0),
         palmytol = if_else(str_detect(Substrate,"Pc"),1,0),
         octanoyl = if_else(str_detect(Substrate,"Oc"),1,0),
         pair = substr(Subject,3,3))

## Should we filter out the 12.95 measure? it isn't basal but fit is much better without it
## May also need to log transform outcome variable,
data <- data |> 
  filter(Dose < -13)

```

```{r, echo = FALSE}
## Different parameterizations but same model
## Not important for final presentation but cool for referenceß
a <- model.matrix(VO2 ~ Substrate : natural + Dose  : natural : Substrate, data = data)
b <- model.matrix(VO2 ~ natural * Dose * Substrate, data = data)
summary(lm(VO2 ~ Substrate : natural + Dose  : natural : Substrate, data = data))
summary(lm(VO2 ~ natural * Dose * Substrate, data = data))

## 1-way ANOVA on substrate, estimate for group mean
## Can calculate our own p-values comparing to overall mean?
summary(lm(VO2 ~ Substrate - 1, data = data))

## Random effects model with pair as a random intercept
lmm1 <- lmer(VO2 ~ natural * Dose * Substrate + (1 | pair), data = data)
lmm2 <- lmer(VO2 ~ Dose * Substrate + (1 | pair), data = data)
summary(lmm1)
anova(lmm1)
anova(lmm1,lmm2)
lrtest(lmm1,lmm2)
performance::r2(lmm1)
performance::icc(lmm1)
## calculating the same thing from summary output
ICC = 582983/(582983+322707)

## Comparison to no group effect, we see a higher r2 for RE model, LRT shows higher LogLik for LMM
lm_compare <- lm(VO2 ~ natural * Dose * Substrate , data = data)
summary(lm_compare)
lrtest(lmm1,lm_compare)

```

```{r, echo = FALSE}
## Looking at residuals vs. theoretical quantiles for LMM model
par(mfrow=c(1,2),las=1)
qqnorm(residuals(lmm1),main="Residuals")
qqnorm(unlist(ranef(lmm1)$pair),main="Random Effects")

#cleaned up graph 
data |> 
  drop_na() |> 
  mutate(residuals = residuals(lmm1)) |> 
  ggplot(aes(x = natural, y = residuals)) +
  geom_point(size = 2, alpha = 0.6) +
  geom_hline(yintercept = 0, color = "blue", linetype = "dashed", linewidth = 1) +
  labs(
    title = "Residuals by Genotype",
    x = "Genotype",
    y = "Model Residuals"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold", hjust = 0.5),
    axis.text.x = element_text(),
    panel.grid.minor = element_blank()
  )

```

```{r, echo = FALSE}
## This one looks bad without dropping 12.95 observations

#cleaned up graph 
data |> 
  drop_na() |> 
  mutate(residuals = residuals(lmm1)) |> 
  ggplot(aes(x = Dose, y = residuals)) +
  geom_point(size = 2, alpha = 0.6) +
  geom_hline(yintercept = 0, color = "blue", linetype = "dashed", linewidth = 1) +
  labs(
    title = "Residuals by Dose",
    x = "Dose",
    y = "Model Residuals"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold", hjust = 0.5),
    axis.text.x = element_text(),
    panel.grid.minor = element_blank()
  )

```

```{r, echo = FALSE}

#cleaned up graph 

data |> 
  drop_na() |> 
  mutate(residuals = residuals(lmm1)) |> 
  ggplot(aes(x = Substrate, y = residuals)) +
  geom_point(size = 2, alpha = 0.6) +
  geom_hline(yintercept = 0, color = "blue", linetype = "dashed", linewidth = 1) +
  labs(
    title = "Residuals by Substrate",
    x = "Substrate",
    y = "Model Residuals"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold", hjust = 0.5),
    axis.text.x = element_text(),
    panel.grid.minor = element_blank()
  )

```

```{r, echo = FALSE}
#cleaned up graph 

data |> 
  drop_na() |> 
  mutate(residuals = residuals(lmm1)) |> 
  ggplot(aes(x = pair, y = residuals)) +
  geom_point(size = 2, alpha = 0.6) +
  geom_hline(yintercept = 0, color = "blue", linetype = "dashed", linewidth = 1) +
  labs(
    title = "Residuals by Pair",
    x = "Pair",
    y = "Model Residuals"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold", hjust = 0.5),
    axis.text.x = element_text(),
    panel.grid.minor = element_blank()
  )

```

```{r, echo = FALSE}
## Fitting model to data
## TODO: fix key, common scales on y-axis
for (i in unique(data$pair)) {
  data_pair <- data |> filter(pair == i)
  
  data_pair <- data_pair |>
    mutate(
      lmmpredictions = predict(lmm1, newdata = data_pair)
    ) |>
    pivot_longer(
      cols = c(VO2, lmmpredictions),
      names_to = "Model", values_to = "Value"
    )
  
  p <- ggplot(data_pair, aes(x = Dose, y = Value,
                             shape = natural, color = Model)) +
    geom_point() +
    geom_line(
      data = filter(data_pair, Model == "lmmpredictions"),
      aes(group = interaction(natural, Substrate)),
      linetype = "dotted", linewidth = 0.7
    ) +
    facet_wrap(~ Substrate) +
    labs(
      title = paste0("VO2 vs. Dose for pair ", i),
      shape = "Genotype", color = "Model"
    ) +
    scale_shape_manual(
      values = c("Natural" = 16, "Transgenic" = 17)
    ) +
    scale_color_manual(
      values = c("VO2" = "black", "lmmpredictions" = "blue"),
      labels = c("LMM fitted", "Observed")
    )
  
  print(p)
}


## Comparing to og linear regression
## TODO: fix key, common scales on y-axis
for (i in unique(data$pair)) {
  data_pair <- data |> filter(pair == i)
  
  # compute predictions outside of mutate
  preds_lmm <- predict(lmm1, newdata = data_pair)
  preds_lm  <- predict(lm_compare, newdata = data_pair)
  
  data_pair <- data_pair |>
    mutate(
      lmmpredictions = preds_lmm,
      lmpredictions  = preds_lm
    ) |>
    pivot_longer(
      cols = c(lmmpredictions, lmpredictions),
      names_to = "Source", values_to = "Value"
    )
  
  p <- ggplot(data_pair, aes(x = Dose, y = Value,
                             shape = natural, color = Source)) +
    geom_point() +
    geom_line(
      data = filter(data_pair, Source == "lmmpredictions"),
      aes(group = interaction(Source, natural)),
      linetype = "dotted", linewidth = 0.7
    ) +
    geom_line(
      data = filter(data_pair, Source == "lmpredictions"),
      aes(group = interaction(Source, natural)),
      linetype = "dotted", linewidth = 0.7
    ) +
    facet_wrap(~ Substrate) +
    labs(
      title = paste0("VO2 vs. Dose for pair ", i),
      shape = "Genotype", color = "Model"
    ) +
    scale_shape_manual(values = c("Natural" = 16, "Transgenic" = 17)) +
    scale_color_manual(
      values = c("lmmpredictions" = "blue",
                 "lmpredictions"  = "red"),
      labels = c("LMM fitted", "LM fitted")
    )
  
  print(p)
}
```

```{r, echo = FALSE}
# cleaning up graphs 

data_pred <- data |> 
  mutate(pair = 7)

preds <- predict(lmm1, data_pred, allow.new.levels = TRUE)

data_pred |>
  mutate(predictions = preds) |>
  tidyr::pivot_longer(cols = c(predictions, VO2),
                      names_to = "measure",
                      values_to = "value") |>
  dplyr::group_by(Substrate, measure, Dose) |>
  dplyr::summarize(mean_value = mean(value, na.rm = TRUE),
                   standard_error = sd(value, na.rm = TRUE),
                   .groups = "drop") |>
  ggplot(aes(x = Dose, y = mean_value, color = measure)) +
  geom_point(size = 2, alpha = 0.85) +
  geom_errorbar(aes(ymin = mean_value - standard_error,
                    ymax = mean_value + standard_error),
                width = 0.025, linewidth = 0.3, alpha = 0.6) +
  facet_wrap(. ~ Substrate) +
  labs(title = "Dose vs. Mean VO₂",
    x = "Dose",
    y = "Mean VO₂ (a.u.)",
    color = "Data Type"
  ) +
  scale_y_continuous(
    breaks = seq(0, 16000, 2000)  
  ) + 
  theme_bw() + 
  theme(
    legend.position = "bottom",
    strip.text = element_text(face = "bold"),
    panel.grid.major = element_line(linewidth = 0.2),
    panel.grid.minor = element_blank(),
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)
  )

```

```{r, echo = FALSE}
# next one

data_pred |>
  mutate(predictions = preds) |>
  tidyr::pivot_longer(cols = c(predictions, VO2),
                      names_to = "measure",
                      values_to = "value") |>
  dplyr::group_by(Substrate, measure, Dose) |>
  dplyr::summarize(
    mean_value = mean(value, na.rm = TRUE),
    standard_error = sd(value, na.rm = TRUE) / sqrt(n()),  # SE
    .groups = "drop"
  ) |>
  ggplot(aes(x = Dose, y = mean_value, color = measure)) +
  geom_point(size = 2, alpha = 0.85) +
  geom_line(linewidth = 0.6) +  
  geom_line(
    data = \(d) d |> dplyr::filter(measure == "predictions"),
    aes(y = mean_value + standard_error),
    linetype = "dotted",
    linewidth = 0.4
  ) +
  geom_line(
    data = \(d) d |> dplyr::filter(measure == "predictions"),
    aes(y = mean_value - standard_error),
    linetype = "dotted",
    linewidth = 0.4
  ) +
  facet_wrap(. ~ Substrate) +
  labs(
    title = "Predictions vs. Observed VO₂",
    x = "Dose",
    y = "Mean VO₂ (a.u.)",
    color = "Data Type"
  ) +
  scale_y_continuous(
    breaks = seq(0, 16000, 2000)
  ) +
  theme_bw() +
  theme(
    legend.position = "bottom",
    strip.text = element_text(face = "bold"),
    panel.grid.major = element_line(linewidth = 0.2),
    panel.grid.minor = element_blank(),
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)
  )


```
